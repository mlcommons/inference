name: Test for the downloads of calibration datasets
on:
  pull_request:
    branches: [ "master", "dev" ]
    paths:
      - vision/classification_and_detection/**
      - language/**
      - recommendation/**
      - .github/workflows/test-calibration-downloads.yml
      - '!**.md'

env:
  PR_HEAD_REF: ${{ github.event.pull_request.head.ref }}

jobs:
  fetch-secret:
    runs-on: ubuntu-latest
    outputs:
      gdrive_secret: ${{ steps.op-load-secret.outputs.GDRIVE_SERVICE_ACCOUNT_KEY }}
    steps:
      - name: Load secret from 1Password
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          GDRIVE_SERVICE_ACCOUNT_KEY: op://hzsgi4viq4fcpg4qxf33kbtqie/r36cu66kuueeh2zx6tdjbl7qlu/credential

  download-imagenet:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download Imagenet Calibration
      run: |
        mlcr get,dataset,imagenet,_calibration --outdirname=. --quiet

  download-openimages:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download Openimages Calibration
      run: |
        mlcr get,dataset,openimages,_calibration --outdirname=. --quiet
  
  download-squad:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download SQUAD Calibration
      run: |
        mlcr get,dataset,squad,_calib1 --outdirname=. --quiet

  download-llama3_1-405b-dataset:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download llama3.1-405b Calibration dataset
      run: |
        mlcr get,dataset,mlperf,inference,llama3,_calibration --outdirname=. --quiet

  download-openorca:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download OpenOrca Calibration
      run: |
        mlcr get,dataset,preprocessed,openorca,_calibration --outdirname=. --quiet

  download-openorca-mbxp-gsm8k-combined-mixtral:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download openorca-mbxp-gsm8k-combined Calibration for Mixtral
      run: |
        mlcr get,dataset-mixtral,openorca-mbxp-gsm8k-combined,_calibration --outdirname=. --quiet

  download-kits19:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download Kits19 Calibration
      run: |
        mlcr get,dataset,kits19,_calibration --outdirname=. --quiet

  download-coco2014:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download COCO2014 Calibration
      run: |
        mlcr get,dataset,coco2014,_calibration --outdirname=. --quiet

  download-waymo:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set RCLONE Service account env var from secret
      shell: bash
      run: |
        echo "::add-mask::${{ needs.fetch-secret.outputs.gdrive_secret }}"
        echo "RCLONE_CONFIG_MLC_WAYMO_SERVICE_ACCOUNT_CREDENTIALS=${{ needs.fetch-secret.outputs.gdrive_secret }}" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python3 -m pip install mlc-scripts
    - name: Download Waymo Calibration
      run: |
        mlcr get,dataset,waymo,calibration,_dry-run --outdirname=. --quiet
